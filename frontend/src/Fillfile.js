import React, { Component } from 'react';
import { withRouter, Link } from 'react-router-dom';
import Jsontoinput from './Jsontoinput';
import './App.css';

/*Component to:
1. Fill default forms with address.
2. Fill custom forms generated by custom FDFs.
*/
class Fillfile extends Component {
  constructor(props) {
  super(props);
  this.state = {
  };
  this.state.data = this.props.setDefaultFields();
  this.handleChange = this.handleChange.bind(this);
  this.handleSubmit = this.handleSubmit.bind(this);
}

  //Function to make async API call
  callApi = async (data) => {
    console.log("ASYNC", data);
    const response = await fetch(`http://localhost:5000/api/fillfields`,{
      method:'POST',
      headers:{'Content-Type': 'application/json'},
      body: data
    });
    const body = await response;
    const blob = response.blob();
    if (response.status !== 200) throw Error(body.message);
    return blob;
  };

  //Update state valriables post form submission and on change of input
  handleChange(event) {
    if(event.target.value.indexOf("smart_form_1") >= 0) this.setState({fileNumber: 1});
    else if(event.target.value.indexOf("smart_form_2") >= 0) this.setState({fileNumber: 2});
    else {this.setState({address: event.target.value});}
  }
  //Form submission and call API to fill and download PDF
  handleSubmit(event) {
    event.preventDefault();
    var jsonForm = {"address":"GTH","fileNumber":"1"};
    this.callApi(jsonForm)
      .then(res =>{
        if(res["error"])
          console.log(res);
        else{
          //TODO: Dynamic set file name
          console.log(res);
          require("downloadjs")(res, `Smart_form_Completed.pdf`, "application/pdf");
        }
      })
      .catch(err => console.log(err));
  }
  //Convert JSON to Form
  JSONtoForm(){
    var dynamicForm = [];
     for(var item in this.state.data){
       if(item !== "fillableFile" && item !== "fileNumber"){
        var fieldTag = <Jsontoinput label={item} key={item} />
        dynamicForm.push(fieldTag);
      }
    }
    return dynamicForm;
  }
  render() {
    return (
      <div>
        <form className="App-form" onSubmit={this.handleSubmit}>
            {this.JSONtoForm()}
          <br/>
          <input type="submit" value="Generate smart_form_1.pdf" onClick={this.handleChange}/>
          <input type="submit" value="Generate smart_form_2.pdf" onClick={this.handleChange}/>
        </form>
        <div>
          Or you can fill your own file <Link to='/fillcustomfile'>here</Link>
        </div>
      </div>
    );
  }
}

export default withRouter(Fillfile);
